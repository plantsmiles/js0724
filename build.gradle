plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.avast.gradle.docker-compose' version '0.14.9'
}

repositories {
	mavenCentral()
}

group = 'com.js0724'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

dependencies {
	implementation("io.github.cdimascio:dotenv-java:3.0.0")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly("org.postgresql:postgresql")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.6.28'
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
    e2eTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/e2eTest/java')
        }
        resources.srcDir file('src/e2eTest/resources')
    }
}

configurations {
    e2eTestImplementation.extendsFrom testImplementation
    e2eTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task e2eTest(type: Test) {
    description = 'Runs end-to-end tests.'
    group = 'verification'

    testClassesDirs = sourceSets.e2eTest.output.classesDirs
    classpath = sourceSets.e2eTest.runtimeClasspath
    outputs.upToDateWhen { false }

    useJUnitPlatform()

    systemProperty 'spring.profiles.active', 'e2e'

    doFirst {
        dockerCompose.exposeAsSystemProperties(test)
    }
}

e2eTest.dependsOn assemble